sbus.h:34:9:uint8_t _bitCount64(uint64_t)	32	static
sbus.h:73:6:void SBUS_init(UART_HandleTypeDef*)	16	static
sbus.h:85:15:SBUS_Result_t SBUS_decoding()	24	static
sbus.h:137:15:SBUS_Result_t SBUS_uartRxCpltCallback()	16	static
sbus.h:179:10:uint16_t SBUS_getChannel(uint8_t)	16	static
MsgBus.h:42:5:bool FC::MsgBus::getBodyAccel(FC::BodyAccel*)	32	static
MsgBus.h:43:5:bool FC::MsgBus::getBodyAngularVelocity(FC::BodyAngularVelocity*)	32	static
MsgBus.h:44:5:bool FC::MsgBus::getBodyMag(FC::BodyMag*)	32	static
MsgBus.h:45:5:bool FC::MsgBus::getGPS(FC::GPS*)	32	static
MsgBus.h:46:5:bool FC::MsgBus::getBarometer(FC::Barometer*)	32	static
MsgBus.h:48:5:bool FC::MsgBus::getController(FC::Controller*)	24	static
MsgBus.h:49:5:bool FC::MsgBus::getVehicleAttitueSP(FC::VehicleAttitueSP*)	32	static
MsgBus.h:52:5:bool FC::MsgBus::getAttitude(FC::Attitude*)	32	static
MsgBus.h:53:5:bool FC::MsgBus::getNedAccel(FC::NedAccel*)	32	static
MsgBus.h:55:5:bool FC::MsgBus::getLocalPosition(FC::LocalPosition*)	32	static
MsgBus.h:57:5:bool FC::MsgBus::getModeFlag(FC::ModeFlag*)	24	static
MsgBus.h:59:5:bool FC::MsgBus::getHealth(FC::Health*)	32	static
MsgBus.h:59:5:void FC::MsgBus::setHealth(const FC::Health&)	24	static
MsgBus.h:61:5:bool FC::MsgBus::getMotorPWM(FC::MotorPWM*)	32	static
ModuleAttitudeController.h:28:14:static void FC::ModuleAttitudeController::main()	448	static
ModuleAttitudeController.h:46:21:static void FC::ModuleAttitudeController::setSignal(FC::AcSignal)	16	static
ModuleAHRS.h:51:17:static void FC::ModuleAHRS::main()	184	static
ModulePositionController.h:30:14:static void FC::ModulePositionController::main()	1104	static
ModulePositionController.h:66:21:static void FC::ModulePositionController::setSignal(FC::PcSignal)	16	static
ModuleINS.h:25:14:static void FC::ModuleINS::main()	3624	static
ModuleHealth.h:20:14:static void FC::ModuleHealth::main()	48	static
ModuleSD.h:28:16:static void FC::ModuleSD::main()	520	static
main.cpp:87:6:void _putchar(char)	16	static
main.cpp:91:6:void Health_StartTask(void*)	16	static
main.cpp:94:6:void Debug_StartTask(void*)	440	static
main.cpp:232:6:void MPU9250_StartTask(void*)	24	static
main.cpp:241:6:void BME280_StartTask(void*)	16	static
main.cpp:247:6:void IST8310_StartTask(void*)	16	static
main.cpp:253:6:void SD_StartTask(void*)	16	static
main.cpp:257:6:void AHRS_StartTask(void*)	16	static
main.cpp:261:6:void Commander_StartTask(void*)	16	static
main.cpp:265:6:void Buzzer_StartTask(void*)	16	static
main.cpp:272:6:void AC_StartTask(void*)	16	static
main.cpp:276:6:void INS_StartTask(void*)	16	static
main.cpp:280:6:void PC_StartTask(void*)	16	static
main.cpp:294:6:void cppMain()	24	static
main.cpp:364:6:void HAL_I2C_MemRxCpltCallback(I2C_HandleTypeDef*)	16	static
main.cpp:392:6:void HAL_UART_RxCpltCallback(UART_HandleTypeDef*)	80	static
main.cpp:427:6:void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef*)	16	static
main.cpp:431:6:void HAL_GPIO_EXTI_Callback(uint16_t)	16	static
Freq.h:18:18:static uint16_t FC::Freq<T>::checkFreq() [with T = FC::SensorAccel]	16	static
Freq.h:18:18:static uint16_t FC::Freq<T>::checkFreq() [with T = FC::SensorGyro]	16	static
Freq.h:18:18:static uint16_t FC::Freq<T>::checkFreq() [with T = FC::RC]	16	static
Freq.h:18:18:static uint16_t FC::Freq<T>::checkFreq() [with T = FC::SensorMag]	16	static
Freq.h:18:18:static uint16_t FC::Freq<T>::checkFreq() [with T = FC::SensorGPS]	16	static
Freq.h:18:18:static uint16_t FC::Freq<T>::checkFreq() [with T = FC::SensorBaro]	16	static
Freq.h:18:18:static uint16_t FC::Freq<T>::checkFreq() [with T = FC::ModuleAHRS]	16	static
Freq.h:18:18:static uint16_t FC::Freq<T>::checkFreq() [with T = FC::ModuleINS]	16	static
Freq.h:18:18:static uint16_t FC::Freq<T>::checkFreq() [with T = FC::ModuleAttitudeController]	16	static
Freq.h:18:18:static uint16_t FC::Freq<T>::checkFreq() [with T = FC::ModulePositionController]	16	static
