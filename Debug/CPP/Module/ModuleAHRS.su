cmath:106:3:constexpr float std::asin(float)	16	static
cmath:144:3:constexpr float std::atan2(float, float)	16	static
cmath:463:3:constexpr float std::sqrt(float)	16	static
msgBus.h:42:5:bool FC::MsgBus::getBodyAccel(FC::BodyAccel*)	32	static
msgBus.h:43:5:bool FC::MsgBus::getBodyAngularVelocity(FC::BodyAngularVelocity*)	32	static
msgBus.h:44:5:bool FC::MsgBus::getBodyMag(FC::BodyMag*)	32	static
msgBus.h:52:5:void FC::MsgBus::setAttitude(const FC::Attitude&)	24	static
msgBus.h:53:5:void FC::MsgBus::setNedAccel(const FC::NedAccel&)	24	static
Usec.h:18:26:uint64_t microsecond()	12	static
ModuleAHRS.cpp:17:1:FC::ModuleAHRS::ModuleAHRS()	24	static
ModuleAHRS.cpp:33:6:void FC::ModuleAHRS::oneStep()	128	static
ModuleAHRS.cpp:107:6:void FC::ModuleAHRS::MadgwickAHRSupdate(float, float, float, float, float, float, float, float, float)	200	static
ModuleAHRS.cpp:204:6:void FC::ModuleAHRS::MadgwickAHRSupdateIMU(float, float, float, float, float, float)	144	static
ModuleAHRS.cpp:272:7:float FC::ModuleAHRS::invSqrt(float)	32	static
Matrix.hpp:63:5:constexpr matrix::Matrix<Type, M, N>::Matrix() [with Type = float; unsigned int M = 4; unsigned int N = 1]	16	static
Vector.hpp:25:5:constexpr matrix::Vector<Type, M>::Vector() [with Type = float; unsigned int M = 4]	16	static
Quaternion.hpp:240:5:matrix::Quaternion<Type>::Quaternion(Type, Type, Type, Type) [with Type = float]	40	static
Matrix.hpp:63:5:constexpr matrix::Matrix<Type, M, N>::Matrix() [with Type = float; unsigned int M = 3; unsigned int N = 3]	16	static
SquareMatrix.hpp:29:5:constexpr matrix::SquareMatrix<Type, M>::SquareMatrix() [with Type = float; unsigned int M = 3]	16	static
Dcm.hpp:89:5:matrix::Dcm<Type>::Dcm(const matrix::Quaternion<Type>&) [with Type = float]	88	static
Matrix.hpp:63:5:constexpr matrix::Matrix<Type, M, N>::Matrix() [with Type = float; unsigned int M = 3; unsigned int N = 1]	16	static
Vector.hpp:25:5:constexpr matrix::Vector<Type, M>::Vector() [with Type = float; unsigned int M = 3]	16	static
Vector3.hpp:47:5:matrix::Vector3<Type>::Vector3(Type, Type, Type) [with Type = float]	32	static
Matrix.hpp:150:24:matrix::Matrix<Type, M, P> matrix::Matrix<Type, M, N>::operator*(const matrix::Matrix<Type, N, P>&) const [with unsigned int P = 1; Type = float; unsigned int M = 3; unsigned int N = 3]	48	static
Vector3.hpp:37:5:matrix::Vector3<Type>::Vector3(const Matrix31&) [with Type = float]	16	static
Matrix.hpp:76:5:matrix::Matrix<Type, M, N>::Matrix(const matrix::Matrix<Type, M, N>&) [with Type = float; unsigned int M = 3; unsigned int N = 1]	16	static
Vector.hpp:52:18:Type& matrix::Vector<Type, M>::operator()(size_t) [with Type = float; unsigned int M = 3]	24	static
Vector.hpp:52:18:Type& matrix::Vector<Type, M>::operator()(size_t) [with Type = float; unsigned int M = 4]	24	static
Vector.hpp:43:17:Type matrix::Vector<Type, M>::operator()(size_t) const [with Type = float; unsigned int M = 4]	24	static
Matrix.hpp:107:18:Type& matrix::Matrix<Type, M, N>::operator()(size_t, size_t) [with Type = float; unsigned int M = 3; unsigned int N = 3]	24	static
Matrix.hpp:449:10:void matrix::Matrix<Type, M, N>::setZero() [with Type = float; unsigned int M = 3; unsigned int N = 1]	16	static
Matrix.hpp:107:18:Type& matrix::Matrix<Type, M, N>::operator()(size_t, size_t) [with Type = float; unsigned int M = 3; unsigned int N = 1]	24	static
Matrix.hpp:97:17:Type matrix::Matrix<Type, M, N>::operator()(size_t, size_t) const [with Type = float; unsigned int M = 3; unsigned int N = 3]	24	static
Matrix.hpp:97:17:Type matrix::Matrix<Type, M, N>::operator()(size_t, size_t) const [with Type = float; unsigned int M = 3; unsigned int N = 1]	24	static
Vector.hpp:27:5:matrix::Vector<Type, M>::Vector(const MatrixM1&) [with Type = float; unsigned int M = 3]	16	static
Matrix.hpp:107:18:Type& matrix::Matrix<Type, M, N>::operator()(size_t, size_t) [with Type = float; unsigned int M = 4; unsigned int N = 1]	24	static
Matrix.hpp:97:17:Type matrix::Matrix<Type, M, N>::operator()(size_t, size_t) const [with Type = float; unsigned int M = 4; unsigned int N = 1]	24	static
